---
import '../styles/global.css';
import { homeContent } from '../config/content';

export interface Props {
  title: string;
  description?: string;
  ogImage?: string;
  ogType?: string;
}

const {
  title,
  description = homeContent.subtitle,
  ogImage = "og-default.png",
  ogType = "website"
} = Astro.props;

const ogImageUrl = (() => {
  const site = Astro.site?.toString() || '';
  const baseUrl = import.meta.env.BASE_URL || '/';
  const cleanSite = site.replace(/\/$/, '');
  // Assicuriamoci che baseUrl finisca sempre con /
  const cleanBase = baseUrl.endsWith('/') ? baseUrl : `${baseUrl}/`;
  return `${cleanSite}${cleanBase}og-images/${ogImage}`;
})();
---

<!DOCTYPE html>
<html lang="it">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href={(() => {
      const baseUrl = import.meta.env.BASE_URL || '/';
      return baseUrl.endsWith('/') ? `${baseUrl}favicon.svg` : `${baseUrl}/favicon.svg`;
    })()} />
    <title>{title}</title>

    <!-- Open Graph -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content={ogType} />
    <meta property="og:image" content={ogImageUrl} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:image:alt" content={title} />

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={ogImageUrl} />
    <meta name="twitter:image:alt" content={title} />
  </head>
  <body class="min-h-screen bg-gray-50">
    <slot />
  </body>
</html>
